# Generated by Django 4.2 on 2023-04-22 12:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ActorExperience",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("description", models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name="ActorProfile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("full_name", models.CharField()),
                ("main_photo", models.CharField()),
                ("birthdate", models.DateField()),
                ("video_business_card", models.CharField()),
                ("figure_parameters", models.CharField(blank=True, null=True)),
                ("height", models.IntegerField()),
                ("weight", models.IntegerField()),
                ("clothing_size", models.IntegerField()),
                ("shoe_size", models.IntegerField()),
                (
                    "eye_color",
                    models.CharField(
                        choices=[
                            ("not_choice", ""),
                            ("blue", "Голубые"),
                            ("gray", "Серые"),
                            ("green", "Зеленые"),
                            ("brown", "Карие"),
                        ]
                    ),
                ),
                (
                    "body_type",
                    models.CharField(
                        choices=[
                            ("not_choice", ""),
                            ("thin", "Худощавое"),
                            ("sports", "Спортивное"),
                            ("average", "Среднее"),
                            ("dense", "Плотное"),
                            ("fat", "Полное"),
                        ]
                    ),
                ),
                ("sex", models.CharField(choices=[("not_choice", ""), ("male", "Мужской"), ("female", "Женский")])),
                (
                    "face_type",
                    models.CharField(
                        choices=[
                            ("not_choice", ""),
                            ("oval", "Овальное"),
                            ("round", "Круглое"),
                            ("square", "Квадратное"),
                        ]
                    ),
                ),
                (
                    "hair_color",
                    models.CharField(
                        choices=[
                            ("not_choice", ""),
                            ("blonde", "Блонд"),
                            ("chestnut", "Каштан"),
                            ("dark_blonde", "Русые"),
                            ("dark", "Темные"),
                            ("redhead", "Рыжие"),
                        ]
                    ),
                ),
                (
                    "hair_length",
                    models.CharField(
                        choices=[("not_choice", ""), ("bald", "Лысый"), ("short", "Короткие"), ("long", "Длинные")]
                    ),
                ),
                (
                    "voice_timbre",
                    models.CharField(choices=[("not_choice", ""), ("high", "Высокий"), ("low", "Низкий")]),
                ),
                (
                    "skin_color",
                    models.CharField(
                        choices=[("not_choice", ""), ("white", "Белая"), ("swarthy", "Смуглая"), ("dark", "Темная")]
                    ),
                ),
                ("tattoo", models.CharField(choices=[("not_choice", ""), ("exist", "Есть"), ("not_exist", "Нет")])),
                ("piercing", models.CharField(choices=[("not_choice", ""), ("exist", "Есть"), ("not_exist", "Нет")])),
                ("education", models.CharField()),
                ("language_proficiency", models.CharField()),
                ("skills", models.CharField()),
                ("willing_to_relocate", models.BooleanField(choices=[(True, "Да"), (False, "Нет")])),
                ("international_passport", models.BooleanField(choices=[(True, "Да"), (False, "Нет")])),
                ("driver_license", models.BooleanField(choices=[(True, "Да"), (False, "Нет")])),
                ("phone_number", models.CharField(blank=True, max_length=17, null=True)),
                ("email", models.EmailField(max_length=254)),
                ("social_network", models.CharField(blank=True, null=True)),
                ("form_active", models.BooleanField(default=True)),
                ("rating", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="AdditionalPhoto",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("link", models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name="Casting",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("photo", models.CharField()),
                ("header", models.CharField()),
                ("fee", models.CharField()),
                ("description", models.CharField()),
                (
                    "sex",
                    models.CharField(
                        choices=[("not_choice", ""), ("male", "Мужской"), ("female", "Женский"), ("all", "Все")]
                    ),
                ),
                ("experience", models.CharField()),
                ("contact_email", models.EmailField(max_length=254)),
                ("social_network", models.CharField(blank=True, null=True)),
                ("actor_type_description", models.CharField()),
                ("min_actor_age", models.IntegerField(blank=True, null=True)),
                ("max_actor_age", models.IntegerField(blank=True, null=True)),
                ("end_of_application", models.DateField()),
                ("date_of_event", models.DateField()),
                ("phone_number", models.CharField(blank=True, max_length=17, null=True)),
                ("moderation", models.BooleanField(default=False)),
                (
                    "additional_photo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core_app.additionalphoto",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ProjectType",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("type_of_project", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="TAG",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name="Response",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("response_time", models.DateTimeField()),
                ("actor", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core_app.actorprofile")),
                ("casting", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core_app.casting")),
            ],
        ),
        migrations.CreateModel(
            name="Favorites",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "actor",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="core_app.actorprofile"
                    ),
                ),
                (
                    "casting",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="core_app.casting"),
                ),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="EmployerProfile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("company_name", models.CharField(max_length=255)),
                ("photo", models.CharField()),
                (
                    "company_specialization",
                    models.CharField(
                        choices=[
                            ("acting_agency", "Актерское агенство"),
                            ("film_company", "Кинокомпания"),
                            ("film_studio", "Киностудия"),
                            ("casting_agency", "Кастинг агенство"),
                            ("concert_agency", "Концертное агенство"),
                            ("casting_director", "Кастинг-директор"),
                            ("modeling_agency", "Модельное агенство"),
                            ("music_studio", "Музыкальная студия"),
                            ("selection", "Подбор кадров"),
                            ("producer", "Продюсер"),
                            ("director", "Режиссер"),
                            ("advertising_agency", "Рекламное агенство"),
                            ("tv_channel", "Телеканал"),
                            ("photo_studio", "Фото студия"),
                            ("other", "Другое"),
                        ]
                    ),
                ),
                ("description", models.CharField()),
                ("approximate_location", models.CharField()),
                ("phone_number", models.CharField(max_length=17)),
                ("additional_phone_number", models.CharField(blank=True, max_length=17, null=True)),
                ("webside", models.URLField(blank=True)),
                ("email", models.EmailField(max_length=254)),
                ("social_network", models.CharField(blank=True, null=True)),
                ("rating", models.IntegerField()),
                ("city", models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to="core_app.city")),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name="casting",
            name="casting_owner",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core_app.employerprofile"),
        ),
        migrations.AddField(
            model_name="casting",
            name="city",
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to="core_app.city"),
        ),
        migrations.AddField(
            model_name="casting",
            name="project_type",
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to="core_app.projecttype"),
        ),
        migrations.AddField(
            model_name="casting",
            name="tag",
            field=models.ManyToManyField(to="core_app.tag"),
        ),
        migrations.AddField(
            model_name="actorprofile",
            name="city",
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to="core_app.city"),
        ),
        migrations.AddField(
            model_name="actorprofile",
            name="experience",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="core_app.actorexperience"
            ),
        ),
        migrations.AddField(
            model_name="actorprofile",
            name="photo_portfolio",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="core_app.additionalphoto"
            ),
        ),
        migrations.AddField(
            model_name="actorprofile",
            name="user",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="actorexperience",
            name="tag",
            field=models.ManyToManyField(to="core_app.tag"),
        ),
    ]
